@page "/log"
@using Microsoft.Extensions.Logging
@using Logging.Memory

<h1>ELM327WebSocketServer Log</h1>

<p>
    @foreach (var log in GetTimeLevelAndLog(LogLevelToGet))
    {
        @(log.level)<br>
        @(log.time)<br>
        @(log.line)<br>
    }            
</p>

@code
{
    private readonly List<LogLevel> LogLevelToGet = new List<LogLevel>(){LogLevel.Debug, LogLevel.Information, LogLevel.Warning, LogLevel.Error, LogLevel.Critical};
    
    public List<(DateTime time, LogLevel level, string line)> GetTimeLevelAndLog(List<LogLevel> logLevelsToGet)
    {
        var returnVal = new List<(DateTime time, LogLevel level, string line)>();
        foreach(var level in logLevelsToGet)
            foreach(var logcontent in MemoryLogger.GetLogWithTime(level))
                returnVal.Add((logcontent.time, level, logcontent.line));

        returnVal.Sort((e1, e2) => -DateTime.Compare(e1.time, e2.time));
        return returnVal;
    }
}